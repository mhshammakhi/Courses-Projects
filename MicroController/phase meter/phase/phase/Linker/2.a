;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 6/7/2013
;Author  : mh
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <math.h>
;#include <delay.h>
;#include <stdio.h>
;#include <lcd.h>
;#include <stdlib.h>
;
;
;
;#define ADC_VREF_TYPE 0x20
;float b,c,d,e;
;int f;
;unsigned char a,str[16],l[10];
;#asm
;PCODE: $0000000D VOL: 0
   .equ __lcd_port=0x12 ;PORTD
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0027 #endasm
;// Read the 8 most significant bits
;// of the AD conversion result
;unsigned char read_adc(unsigned char adc_input)
; 0000 002B {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002C ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;PCODE: $00000012 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 002D // Delay needed for the stabilization of the ADC input voltage
; 0000 002E delay_us(10);
;PCODE: $00000016 VOL: 0
; 0000 002F // Start the AD conversion
; 0000 0030 ADCSRA|=0x40;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0031 // Wait for the AD conversion to complete
; 0000 0032 while ((ADCSRA & 0x10)==0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0033 ADCSRA|=0x10;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0034 return ADCH;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0035 }
;PCODE: $00000024 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 003A {
;PCODE: $00000025 VOL: 0
; 0000 003B // Declare your local variables here
; 0000 003C 
; 0000 003D // Input/Output Ports initialization
; 0000 003E // Port A initialization
; 0000 003F // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0040 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0041 PORTA=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0042 DDRA=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0043 
; 0000 0044 // Port B initialization
; 0000 0045 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0046 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0047 PORTB=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0048 DDRB=0xff;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0049 
; 0000 004A // Port C initialization
; 0000 004B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004D PORTC=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 004E DDRC=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 004F 
; 0000 0050 // Port D initialization
; 0000 0051 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0052 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0053 PORTD=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0054 DDRD=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0055 
; 0000 0056 // Timer/Counter 0 initialization
; 0000 0057 // Clock source: System Clock
; 0000 0058 // Clock value: Timer 0 Stopped
; 0000 0059 // Mode: Normal top=0xFF
; 0000 005A // OC0 output: Disconnected
; 0000 005B TCCR0=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 005C TCNT0=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 005D OCR0=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 005E 
; 0000 005F // Timer/Counter 1 initialization
; 0000 0060 // Clock source: System Clock
; 0000 0061 // Clock value: Timer1 Stopped
; 0000 0062 // Mode: Normal top=0xFFFF
; 0000 0063 // OC1A output: Discon.
; 0000 0064 // OC1B output: Discon.
; 0000 0065 // Noise Canceler: Off
; 0000 0066 // Input Capture on Falling Edge
; 0000 0067 // Timer1 Overflow Interrupt: Off
; 0000 0068 // Input Capture Interrupt: Off
; 0000 0069 // Compare A Match Interrupt: Off
; 0000 006A // Compare B Match Interrupt: Off
; 0000 006B TCCR1A=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 006C TCCR1B=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006D TCNT1H=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 006E TCNT1L=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 006F ICR1H=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0070 ICR1L=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0071 OCR1AH=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0072 OCR1AL=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0073 OCR1BH=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0074 OCR1BL=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0075 
; 0000 0076 // Timer/Counter 2 initialization
; 0000 0077 // Clock source: System Clock
; 0000 0078 // Clock value: Timer2 Stopped
; 0000 0079 // Mode: Normal top=0xFF
; 0000 007A // OC2 output: Disconnected
; 0000 007B ASSR=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 007C TCCR2=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 007D TCNT2=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 007E OCR2=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 007F 
; 0000 0080 // External Interrupt(s) initialization
; 0000 0081 // INT0: Off
; 0000 0082 // INT1: Off
; 0000 0083 // INT2: Off
; 0000 0084 MCUCR=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0085 MCUCSR=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0086 
; 0000 0087 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0088 TIMSK=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0089 
; 0000 008A // USART initialization
; 0000 008B // USART disabled
; 0000 008C UCSRB=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 008D 
; 0000 008E // Analog Comparator initialization
; 0000 008F // Analog Comparator: Off
; 0000 0090 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0091 ACSR=0x80;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0092 SFIOR=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0093 
; 0000 0094 // ADC initialization
; 0000 0095 // ADC Clock frequency: 1000.000 kHz
; 0000 0096 // ADC Voltage Reference: AREF pin
; 0000 0097 // ADC Auto Trigger Source: Free Running
; 0000 0098 // Only the 8 most significant bits of
; 0000 0099 // the AD conversion result are used
; 0000 009A ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 009B ADCSRA=0xA3;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 009C SFIOR&=0x1F;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 009D 
; 0000 009E // SPI initialization
; 0000 009F // SPI disabled
; 0000 00A0 SPCR=0x00;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 00A1 
; 0000 00A2 // TWI initialization
; 0000 00A3 // TWI disabled
; 0000 00A4 TWCR=0x00;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 00A5 
; 0000 00A6 while (1)
;PCODE: $0000006F VOL: 0
; 0000 00A7       {
; 0000 00A8 
; 0000 00A9       if (read_adc(0)==0x7f) {a=0x7f-read_adc(1);b=a/256;c=isqrt(b);d=2*asin(c);e=180*d/PI;f=e;lcd_init(16);lcd_clear();sprintf(str,"Phase= %d",a);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00AA       ftoa(a,l);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00AB       lcd_puts(l);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00AC       }
; 0000 00AD 
; 0000 00AE 
; 0000 00AF 
; 0000 00B0       }
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00B1 }
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
