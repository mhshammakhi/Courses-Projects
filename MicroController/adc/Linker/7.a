;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 5/27/2013
;Author  : mh
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 4.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <delay.h>
;
;#define ADC_VREF_TYPE 0x60
;unsigned char x=0,a;
;// Read the 8 most significant bits
;// of the AD conversion result
;unsigned char read_adc(unsigned char adc_input)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0022 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;PCODE: $0000000F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0023 // Delay needed for the stabilization of the ADC input voltage
; 0000 0024 delay_us(10);
;PCODE: $00000013 VOL: 0
; 0000 0025 // Start the AD conversion
; 0000 0026 ADCSRA|=0x40;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0027 // Wait for the AD conversion to complete
; 0000 0028 while ((ADCSRA & 0x10)==0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0029 ADCSRA|=0x10;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002A return ADCH;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002B }
;PCODE: $00000021 VOL: 0
;
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 002E {
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002F x++;
;PCODE: $00000024 VOL: 0
; 0000 0030 PORTD=0xff;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0031 if (x==18)
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0032     {
; 0000 0033     x=0;
;PCODE: $0000002A VOL: 0
; 0000 0034     PORTC=PORTC+1;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0035     }
; 0000 0036 }
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 003B {
;PCODE: $00000032 VOL: 0
; 0000 003C // Declare your local variables here
; 0000 003D 
; 0000 003E // Input/Output Ports initialization
; 0000 003F // Port A initialization
; 0000 0040 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0041 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0042 PORTA=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0043 DDRA=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0044 
; 0000 0045 // Port B initialization
; 0000 0046 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0047 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0048 PORTB=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0049 DDRB=0xff;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 004A 
; 0000 004B // Port C initialization
; 0000 004C // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004D // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004E PORTC=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 004F DDRC=0xff;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0050 
; 0000 0051 // Port D initialization
; 0000 0052 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0053 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0054 PORTD=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0055 DDRD=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0056 
; 0000 0057 // Timer/Counter 0 initialization
; 0000 0058 // Clock source: System Clock
; 0000 0059 // Clock value: Timer 0 Stopped
; 0000 005A // Mode: Normal top=0xFF
; 0000 005B // OC0 output: Disconnected
; 0000 005C TCCR0=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 005D TCNT0=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 005E OCR0=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 005F 
; 0000 0060 
; 0000 0061 
; 0000 0062 // External Interrupt(s) initialization
; 0000 0063 // INT0: Off
; 0000 0064 // INT1: Off
; 0000 0065 // INT2: Off
; 0000 0066 MCUCR=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0067 MCUCSR=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0068 
; 0000 0069 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 006A TIMSK=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 006B 
; 0000 006C // USART initialization
; 0000 006D // USART disabled
; 0000 006E UCSRB=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 006F 
; 0000 0070 // Analog Comparator initialization
; 0000 0071 // Analog Comparator: Off
; 0000 0072 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0073 ACSR=0x80;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0074 SFIOR=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0075 
; 0000 0076 // ADC initialization
; 0000 0077 // ADC Clock frequency: 1000.000 kHz
; 0000 0078 // ADC Voltage Reference: AVCC pin
; 0000 0079 // ADC Auto Trigger Source: Free Running
; 0000 007A // Only the 8 most significant bits of
; 0000 007B // the AD conversion result are used
; 0000 007C ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 007D ADCSRA=0xA2;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 007E SFIOR&=0x1F;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 007F TCCR2=0x0f;TCNT2=0x00;OCR2=217;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0080 // SPI initialization
; 0000 0081 // SPI disabled
; 0000 0082 SPCR=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0083 
; 0000 0084 // TWI initialization
; 0000 0085 // TWI disabled
; 0000 0086 TWCR=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0087 
; 0000 0088 while (1)
;PCODE: $00000066 VOL: 0
; 0000 0089       {
; 0000 008A       PORTB=read_adc(0);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 008B           //    if (read_adc(0)==0xff)
; 0000 008C           //      {if (a==2) {TCCR2=0x00;PORTD.0=0;a=3;}
; 0000 008D        //     else if (a==0) {a++;PORTD.0=1;}}
; 0000 008E        //  else if(a==1) a=2;
; 0000 008F        //  else if(a==3) a=0;
; 0000 0090       }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0091 }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
