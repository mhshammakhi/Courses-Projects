;/*****************************************************
;Project :Clock
;Author : mh sha
;Company : Pishro Noavaran Kavosh
;*****************************************************/
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <lcd.h>
;#include <stdio.h>
;#asm
;PCODE: $0000000D VOL: 0
.equ __lcd_port=0x1B ;PORTA
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000B #endasm
;unsigned char second, minute,hour;
;unsigned char lcd_buff[10];
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 000F   {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0010     if(second==59)
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0011     {
; 0000 0012     second=0;
;PCODE: $00000015 VOL: 0
; 0000 0013      if(minute==59)
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0014      {
; 0000 0015      minute=0;
;PCODE: $00000019 VOL: 0
; 0000 0016       if(hour==23)
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0017       hour=0;
;PCODE: $0000001D VOL: 0
; 0000 0018      else
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0019      hour++;
;PCODE: $00000020 VOL: 0
; 0000 001A      }
;PCODE: $00000021 VOL: 0
; 0000 001B     else
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001C     minute++;
;PCODE: $00000024 VOL: 0
; 0000 001D     }
;PCODE: $00000025 VOL: 0
; 0000 001E     else
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 001F     second++;
;PCODE: $00000028 VOL: 0
; 0000 0020     sprintf(lcd_buff,"Time = %02d:%02d:%02d",hour, minute,second);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0021     lcd_clear();
;PCODE: $0000003C VOL: 0
; 0000 0022     lcd_puts(lcd_buff);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0023     }
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;void main(void)
; 0000 0025 {
;PCODE: $00000042 VOL: 0
; 0000 0026 // Clock source: TOSC1 pin
; 0000 0027 // Clock value: PCK2/128
; 0000 0028 // Mode: Normal top=FFh
; 0000 0029 // OC2 output: Disconnected
; 0000 002A ASSR=0x08;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 002B TCCR2=0x05;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002C TCNT2=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002D OCR2=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 002E // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 002F TIMSK=0x40;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0030 lcd_init(16);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0031 #asm("sei") // Global enable interrupts
;PCODE: $0000004F VOL: 0
	sei
;PCODE: $00000050 VOL: 0
; 0000 0032 }
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
